/*! https://github.com/leeoniya/uDSV (v0.7.2) */
var uDSV=function(e){"use strict";const t=/^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d{3,})?(?:Z|[-+]\d{2}:?\d{2}))?$/,l=/^(?:t(?:rue)?|f(?:alse)?|y(?:es)?|n(?:o)?|0|1)$/i,n=["\t","|",";",","];function r(e){return 65279===e.charCodeAt(0)?e.slice(1):e}const i="d",s="t",c="n",f="j",a="b";const u=JSON.stringify,o=e=>"string"==typeof e?u(e):e;function d(e,t){let{type:l,parse:n}=t,r=`r[${e}]`,d=null!=n?`c[${e}].parse(${r})`:l===i?`new Date(${r})`:l===s?`Date.parse(${r})`:l===f?`JSON.parse(${r})`:l===c?"+"+r:l[0]===a?`${r} === ${u(l.slice(2))} ? true : false`:r,{repl:h}=t,p=void 0!==h.NaN&&l===c?`${r} === 'NaN' ? ${o(h.NaN)} : `:"",$=void 0!==h.null?`${r} === 'null' || ${r} === 'NULL' ? ${o(h.null)} : `:"";return`${void 0!==h.empty?`${r} === '' ? ${o(h.empty)} : `:""} ${$} ${p} ${d}`}const h=/\w+(?:\[|\]?[\.\[]?|$)/gm;function p(e,t=!1,l=!1){let n="";if(t&&l){let t={},l=0,r=e.map((e=>e.name.replace(/\.(\d+)\.?/gi,"[$1]")));do{let e=r.shift(),n=/\s/.test(e)?[e]:[...e.matchAll(h)].flatMap((e=>e.map((e=>e.replace("]",""))))),i=t;do{let e=n.shift(),t=e,r=e.at(-1);"."==r||"["==r?(t=e.slice(0,-1),i=i[t]=i[t]??("."==r?{}:[])):i[t]=`¦${l}¦`}while(n.length>0);l++}while(r.length>0);n=u(t).replace(/"¦(\d+)¦"/g,((t,l)=>d(+l,e[+l])))}else!t&&e.every((e=>"s"===e.type))?n="r":(n=t?"{":"[",e.forEach(((e,l)=>{n+=t?u(e.name)+":":"";let r=d(l,e);n+=r+","})),n+=t?"}":"]");return Function("c",`return r => (${n});`)(e)}function $(e,t,l=0,n=(()=>!0),i=!0,s){e=r(e);let{row:c,col:f,encl:a,esc:u,trim:o}=t;a??=e.indexOf('"')>-1?'"':"",u??=a;let d=`${u}${a}`,h=s??t.cols.length,p=null!=s,$=c.length,g=f.length,y=a.charCodeAt(0),m=u.charCodeAt(0),A=c.charCodeAt(0),k=f.charCodeAt(0),N=["",!1],C=0,b=e.length-1,O=0,x=Array(h).fill(""),v=x.slice(),w=0,E=h-1,S=-1;if(""===a){for(;b>=C;)if(w===E){let t=e.indexOf(c,C);if(-1===t){if(!i)break;t=b+1}let r=e.slice(C,t);if(v[w]=o?r.trim():r,0>--l&&!1===n(v))return N[1]=!0,N;v=x.slice(),w=0,S=-1,C=t+$,O=C}else if(0===w&&e.charCodeAt(C)===A)C+=$;else{let t=e.indexOf(f,C);if(-1===t&&!i)break;let l=e.slice(C,t);v[w]=o?l.trim():l,C=t+g,S=w++}return 0>--l&&i&&w===E&&S>-1&&n(v),N[0]=i?"":e.slice(O),N}const L=p?RegExp(`[^${f}${c}]+`,"my"):null;let T=0,D="",R=0,Y=C;for(;b>=C;){if(R=e.charCodeAt(C),0===T)if(R===y){if(T=2,C+=1,Y=C,C>b)break;R=e.charCodeAt(C)}else if(R===k||R===A){if(R===A&&0===w){C+=$;continue}if(v[w]=D,S=w,w+=1,C+=1,D="",R===A){if(p&&E>S&&0===O&&(v.length=x.length=S+1,E=S),0>--l&&!1===n(v))return N[1]=!0,N;v=x.slice(),w=0,S=-1,C+=$-1,O=C}if(C>b)break}else if(o&&32===R)for(;32===R;)R=e.charCodeAt(++C);else T=1;if(2===T){let t=!1,l=0;for(;;)if(R===y)if(y===m){if(C+1>b){l=C,C=b+1;break}if(e.charCodeAt(C+1)!==y){T=0,l=C,C+=1;break}if(C+=2,t=!0,C>b)break;R=e.charCodeAt(C)}else{if(e.charCodeAt(C-1)!==m){T=0,l=C,C+=1;break}if(C+=1,t=!0,C>b)break;R=e.charCodeAt(C)}else{let t=e.indexOf(a,C);if(-1===t){C=b+1;break}C=t,R=y}(0===T||C>b)&&(D=t?e.slice(Y,l).replaceAll(d,a):e.slice(Y,l))}else if(1===T)if(R===k||R===A){if(R===A&&0===w){C+=$;continue}if(v[w]=D,S=w,w+=1,C+=1,D="",R===A){if(p&&E>S&&0===O&&(v.length=x.length=S+1,E=S),0>--l&&!1===n(v))return N[1]=!0,N;v=x.slice(),w=0,S=-1,C+=$-1,O=C}T=0}else if(p){L.lastIndex=C;let t=L.exec(e)[0];D=t,C+=t.length}else{let t=e.indexOf(w===E?c:f,C);-1===t&&(t=b+1);let l=e.slice(C,t);D=o?l.trim():l,C=t}}return i&&w===E&&(v[w]=D,0>--l&&n(v),T=0),N[0]=i||0===T&&!(-1===S?""!==D:E>S)?"":e.slice(O),N}return e.inferSchema=function(e,s,u){let{header:o,col:d,row:h,encl:p,esc:g,trim:y=!1}=s??{};o??=e=>[e[0]],u??=10,e=r(e);const m=RegExp(`(.*)(${h??"\r\n|\r|\n"})`),A=e.match(m),k=A[1];h??=A[2],d??=n.find((e=>k.indexOf(e)>-1))??",";const N={skip:1,col:d,row:h,encl:p,esc:g,trim:y,cols:[]},C=k.split(d).length,b=[];$(e,N,0,(e=>(b.push(e),u>b.length)),!0,C);let O=o(b)??[],x=N.skip=O.length,v=O.find((e=>null!=e))??[...Array(b[0].length).keys()];return b.splice(0,x),v.forEach(((e,n)=>{let r=function(e,n){let r=n.findLast((t=>""!==t[e]&&"null"!==t[e]&&"NULL"!==t[e]&&"NaN"!==t[e])),s="s";if(null!=r){let n=r[e];s=t.test(n)?i:+n==+n?c:l.test(n)?a+":"+function(e){let[t,l=""]=e;return"1"==t||"0"==t?"1":"t"==t||"f"==t?""==l?"t":"true":"T"==t||"F"==t?""==l?"T":"R"==l||"A"===l?"TRUE":"True":"y"==t||"n"==t?""==l?"y":"yes":"Y"==t||"N"==t?""==l?"Y":"E"==l||"O"===l?"YES":"Yes":""}(n):function(e){if("["===e[0]||"{"===e[0])try{return JSON.parse(e),!0}catch{}return!1}(n)?f:s}return s}(n,b);N.cols.push({name:e,type:r,repl:{empty:null,NaN:void 0,null:void 0}})})),N},e.initParser=function(e){let{skip:t,cols:l}=e,n=null,r=null,i=null,s=null,c=null,f=0,a=null,u=null,o="",d=null;function h(){f=0,o="",a=u=d=null}let g=(e,t,l)=>(l(t,e),!0),y=()=>[],m=()=>l.map((()=>[])),A=(e,t)=>{e.push(t)},k=(e,t)=>{for(let n=0;l.length>n;n++)e[n].push(t[n])};function N(l,n,r){let i=null;return(s,c=g)=>{i??=r();let a=null==d?t:0;d??=l();let u=d,p=0===f||2===f,y=!1;if(Array.isArray(s)){for(let e=0;s.length>e;e++)if(!1===c(i(s[e]),u,n)){y=!0;break}}else[o,y]=$(s,e,a,(e=>c(i(e),u,n)),p);return y&&0!==f&&h(),p&&(d=null),u}}const C=()=>(n??=e=>e,n),b=()=>(r??=p(l,!1,!1),r),O=N(y,A,C),x=N(y,A,(()=>(c??=p(l.map((e=>({...e,type:"s",repl:{...e.repl,empty:void 0}}))),!0,!1),c))),v=N(y,A,b),w=N(y,A,(()=>(i??=p(l,!0,!1),i))),E=N(y,A,(()=>(s??=p(l,!0,!0),s))),S=N(m,k,b),L=N(m,k,C);return{schema:e,stringArrs:O,stringObjs:x,stringCols:L,typedArrs:v,typedObjs:w,typedDeep:E,typedCols:S,chunk(e,t=O,l=g){a??=t,u??=l,f=1,a(o+e,u)},end(){f=2;let e=a(o,u);return h(),e}}},e}({});
